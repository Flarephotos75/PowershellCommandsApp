{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Projects/365ps/src/Components/ScriptOptions.js\";\nimport React from 'react';\nimport '../App.cs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScriptOptions = () => {\n  const scriptOptions = [{\n    name: 'Connect to Azure',\n    script: '../Scripts/connect.ps1'\n  }, {\n    name: 'List Users Not Logged On in Last 90 Days',\n    script: '../Scripts/90days.ps1'\n  }, {\n    name: 'List All Domain Administrators',\n    script: '../Scripts/allDomainAdmins.ps1'\n  }, {\n    name: 'List Permissions on Email Account',\n    script: '../Scripts/emailPermissions.ps1'\n  }\n  // Add more script options\n  ];\n\n  const executeScript = async scriptName => {\n    try {\n      // Make the API call to execute the script\n      const response = await fetch(`/api/executescript?scriptName=${scriptName}`);\n      const data = await response.text();\n\n      // Open a new window or tab to display the results\n      const resultsWindow = window.open('', '_blank');\n      resultsWindow.document.write(`<pre>${data.output.join('\\n')}</pre>`);\n    } catch (error) {\n      console.error('Error executing script:', error);\n      // Handle the error as needed\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"App-subHeader\",\n      children: \"Script Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scriptOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-list\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => executeScript(option.script),\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = ScriptOptions;\nexport default ScriptOptions;\nvar _c;\n$RefreshReg$(_c, \"ScriptOptions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ScriptOptions","scriptOptions","name","script","executeScript","scriptName","response","fetch","data","text","resultsWindow","window","open","document","write","output","join","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/Users/Steven/Projects/365ps/src/Components/ScriptOptions.js"],"sourcesContent":["import React from 'react';\nimport '../App.cs'\n\nconst ScriptOptions = () => {\n  const scriptOptions = [\n    {\n        name: 'Connect to Azure',\n        script: '../Scripts/connect.ps1',\n    },\n    {\n      name: 'List Users Not Logged On in Last 90 Days',\n      script: '../Scripts/90days.ps1',\n    },\n    {\n      name: 'List All Domain Administrators',\n      script: '../Scripts/allDomainAdmins.ps1',\n    },\n    {\n      name: 'List Permissions on Email Account',\n      script: '../Scripts/emailPermissions.ps1',\n    },\n    // Add more script options\n  ];\n\n  const executeScript = async (scriptName) => {\n    try {\n      // Make the API call to execute the script\n      const response = await fetch(`/api/executescript?scriptName=${scriptName}`);\n      const data = await response.text();\n\n      // Open a new window or tab to display the results\n      const resultsWindow = window.open('', '_blank');\n      resultsWindow.document.write(`<pre>${data.output.join('\\n')}</pre>`);\n    } catch (error) {\n      console.error('Error executing script:', error);\n      // Handle the error as needed\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"App-subHeader\" >Script Options</h2>\n      <div>\n        {scriptOptions.map((option, index) => (\n          <div className=\"App-list\" key={index}>\n            <button onClick={() => executeScript(option.script)}>{option.name}</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ScriptOptions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,aAAa,GAAG,CACpB;IACIC,IAAI,EAAE,kBAAkB;IACxBC,MAAM,EAAE;EACZ,CAAC,EACD;IACED,IAAI,EAAE,0CAA0C;IAChDC,MAAM,EAAE;EACV,CAAC,EACD;IACED,IAAI,EAAE,gCAAgC;IACtCC,MAAM,EAAE;EACV,CAAC,EACD;IACED,IAAI,EAAE,mCAAmC;IACzCC,MAAM,EAAE;EACV;EACA;EAAA,CACD;;EAED,MAAMC,aAAa,GAAG,MAAOC,UAAU,IAAK;IAC1C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCF,UAAW,EAAC,CAAC;MAC3E,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC;MAC/CF,aAAa,CAACG,QAAQ,CAACC,KAAK,CAAE,QAAON,IAAI,CAACO,MAAM,CAACC,IAAI,CAAC,IAAI,CAAE,QAAO,CAAC;IACtE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAIqB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAAE;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDzB,OAAA;MAAAoB,QAAA,EACGlB,aAAa,CAACwB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/B5B,OAAA;QAAKqB,SAAS,EAAC,UAAU;QAAAD,QAAA,eACvBpB,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMxB,aAAa,CAACsB,MAAM,CAACvB,MAAM,CAAE;UAAAgB,QAAA,EAAEO,MAAM,CAACxB;QAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GAD9CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAhDI7B,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}